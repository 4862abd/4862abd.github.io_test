※※ 시작하며

이번 챕터에서는 여태 설명했던 액션과 계산, 데이터의 영역 중 액션에서 계산을 분리하는 것을 다룰 것이라고 한다.
액션은 호출 시기, 상태에 따라 결과가 다르고 사이드 이펙트가 존재하는 순수하지 않은 함수이다.
그 액션 안에서 순수한 함수, 계산을 분리해내려 한다.
즉, 함수 중심의 프로그래밍을 이어가는 과정 중 중요한 챕터가 될 것이다.
이후에 나오지만 이 책에서는 순수한 함수인 계산을 일급 객체로 정의한다.
하지만 우리가 백단의 프로그래밍을 객체지향으로 진행할 때 클래스(객체, Object)를 일급 객체로 정의한다.
이를 잘 살피고, JS의 코드를 잘 살펴 Java로 코딩하는 과정이 중요할 것이다.
특히, 객체지향의 경우 클래스 디자인과 객체들의 관계가 중심이 되어 상태, 멤버변수, 메소드 등 각 객체가 긴밀한
관계를 가지지는 것에 반해
함수형 프로그래밍은 값의 연산, 값의 도출을 중심으로 코드가 이루어진다.
일급 객체가 될 계산은 인자로 받은 값을 별도로 저장(사이드 이펙트)하지 않고 최대한 간결한 과정으로
처리하는 데에 목적을 두는 것이 큰 차이가 될 것이다.

일급 객체: 다른 요소들과 아무런 차별이 없는 객체.
일급 객체는 함수의 실질적인 매개변수가 될 수 있다.
일급 객체는 함수의 반환 값이 될 수 있다.
일급 객체는 할당의 대상이 될 수 있다.
일급 객체는 비교 연산(==, equals)을 적용할 수 있다.



※※ MegaMart.com에 오신 것을 환영합니다

우선 책에서는 앞으로 수정해갈 것으로 보이는 코드를 소개한다.
![image](https://github.com/cotes2020/jekyll-theme-chirpy/assets/77370682/d56ab99b-ce7a-4205-9f81-38934638388d)

봐라.
딱 봐도 이상하다.
우선 add_item_to_cart() 는 calc_cart_total() 을 호출하는 부모 함수가 될 것이다.
그리고 calc_cart_total() 을 보면 첫 줄 부터 멤버 변수의 값을 초기화한다.
이건 진작에 분리됐어야 할 영역이다.
관심사의 분리가 제대로 되지 않은 것.
차라리 지역 변수를 선언하여 0값으로 이용하고 return 하여 부모 함수에서 멤버 변수에 값을 할당하는 것이 낫지 않았을까.
이제 첫 줄 읽었다 ㅋㅋ

다음 라인은 반복문이다.
이 반복문을 본 프론트엔드 친구의 첫 말, "아, 일반 반복문 극혐".
반복문 안의 로직을 보면 메인이 되는 서비스 로직임을 알 수 있다.
카트(shopping_cart)에 있는 item을 하나 씩 꺼내서 그 값을 멤버 변수에 계속 초기화하며 계산한다.
이야.. 타입이라도 깨지거나 잘 못된 값이 들어가면 어쩌려고..

마지막 라인은 DOM에 데이터를 바인딩 하는 함수(set_cart_total_dom())라고 한다.

일단 현재까지 내가 공부한 내용으로 위의 코드를 리팩토링 하자면 이렇게 될 것이다.
** Java 코드

